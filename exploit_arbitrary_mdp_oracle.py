from mars.utils.func import LoadYAML2Dict
from mars.rollout import rollout
from mars.rl.agents import *
from mars.rl.agents.multiagent import MultiAgent
from mars.env.import_env import make_env
from mars.utils.func import get_model_path, get_exploiter

import argparse

## this one for nash only
### Load configurations

def launch_rollout():

    method = 'nash_dqn'
    prefix = 'mars/confs/mdp/mdp_arbitrary_mdp_'
    yaml_file = prefix + method

    args = LoadYAML2Dict(yaml_file, toAttr=True)
    args.marl_spec['global_state'] = True
    args.max_episodes = 30000
    args.against_baseline = False
    args.num_envs = 1  # can also to multiprocess exploitation for speed up
    args.test = False
    args.exploit = True
    args.device = 'gpu'
    # load_id = '20220122133250'
    # args.load_model_full_path = f'data/model/{load_id}/mdp_arbitrary_mdp_{method}/0_0'
    ### Create env
    env = make_env(args)
    print(env)

    ### Specify models for each agent
    # trained_model = eval(args.algorithm)(env, args)
    trained_model = OracleAgent(env, args)
    exploiter, exploitation_args = get_exploiter('DQN', env, args)

    model = MultiAgent(env, [trained_model, exploiter], exploitation_args)

    ### Rollout
    rollout(env, model, args, f'exploit_oracle128')

if __name__ == '__main__':
    launch_rollout()