/home/zihan/anaconda3/envs/x/lib/python3.7/site-packages/ecos/ecos.py:26: UserWarning: Converting G to a CSC matrix; may take a while.
  warn("Converting G to a CSC matrix; may take a while.")
/home/zihan/anaconda3/envs/x/lib/python3.7/site-packages/ecos/ecos.py:29: UserWarning: Converting A to a CSC matrix; may take a while.
  warn("Converting A to a CSC matrix; may take a while.")
/home/zihan/anaconda3/envs/x/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
/home/zihan/anaconda3/envs/x/lib/python3.7/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
pygame 2.0.1 (SDL 2.0.14, Python 3.7.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
arbitrary_mdp mdp
Load arbitrary_mdp environment in type mdp.
Env observation space: Box(0.0, 42.0, (1,), float32) action space: Discrete(6)
<mars.env.mdp.mdp_wrapper.MDPWrapper object at 0x7ff6eebffd68>
DQNBase(
  (net): MLP(
    (body): Sequential(
      (0): Linear(in_features=1, out_features=128, bias=True)
      (1): ReLU()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): ReLU()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): ReLU()
      (6): Linear(in_features=128, out_features=6, bias=True)
    )
  )
)
DQNBase(
  (net): MLP(
    (body): Sequential(
      (0): Linear(in_features=1, out_features=128, bias=True)
      (1): ReLU()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): ReLU()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): ReLU()
      (6): Linear(in_features=128, out_features=6, bias=True)
    )
  )
)
No agent are not learnable.
Arguments:  {'env_name': 'arbitrary_mdp', 'env_type': 'mdp', 'num_envs': 1, 'ram': True, 'seed': 1, 'algorithm': 'NFSP', 'algorithm_spec': {'episodic_update': False, 'dueling': False, 'replay_buffer_size': '1e5', 'gamma': 0.99, 'multi_step': 1, 'target_update_interval': 1000, 'eps_start': 1.0, 'eps_final': 0.0, 'eps_decay': 10000}, 'num_process': 1, 'batch_size': 640, 'max_episodes': 50100, 'max_steps_per_episode': 10000, 'train_start_frame': 0, 'optimizer': 'adam', 'learning_rate': '1e-4', 'device': 'gpu', 'update_itr': 1, 'log_avg_window': 20, 'log_interval': 20, 'render': False, 'test': False, 'exploit': False, 'load_model_idx': False, 'load_model_full_path': False, 'multiprocess': False, 'eval_models': False, 'save_path': '', 'save_interval': 2000, 'net_architecture': {'hidden_dim_list': [128, 128, 128], 'hidden_activation': 'ReLU', 'output_activation': False, 'policy': {'hidden_dim_list': [128, 128, 128], 'hidden_activation': 'ReLU', 'output_activation': 'Softmax'}}, 'marl_method': 'nfsp', 'marl_spec': {'min_update_interval': 20, 'score_avg_window': 10, 'global_state': True, 'eta': 0.1}}
Save models to : /home/zihan/research/MARS/data/model/20220518032004/mdp_arbitrary_mdp_nfsp. 
 Save logs to: /home/zihan/research/MARS/data/log/20220518032004/mdp_arbitrary_mdp_nfsp.
Episode: 1/50100 (0.0020%),                 avg. length: 5.0,                last time consumption/overall running time: 0.5830s / 0.5830 s
agent0:                 episode reward: -1.2321,                 loss: nan
agent1:                 episode reward: 1.2321,                 loss: nan
Episode: 21/50100 (0.0419%),                 avg. length: 5.0,                last time consumption/overall running time: 0.1324s / 0.7153 s
agent0:                 episode reward: -0.0342,                 loss: nan
agent1:                 episode reward: 0.0342,                 loss: nan
Episode: 41/50100 (0.0818%),                 avg. length: 5.0,                last time consumption/overall running time: 0.1261s / 0.8414 s
agent0:                 episode reward: 0.3879,                 loss: nan
agent1:                 episode reward: -0.3879,                 loss: nan
Episode: 61/50100 (0.1218%),                 avg. length: 5.0,                last time consumption/overall running time: 0.1256s / 0.9670 s
agent0:                 episode reward: -0.3671,                 loss: nan
agent1:                 episode reward: 0.3671,                 loss: nan
Episode: 81/50100 (0.1617%),                 avg. length: 5.0,                last time consumption/overall running time: 0.1296s / 1.0966 s
agent0:                 episode reward: 0.5005,                 loss: nan
agent1:                 episode reward: -0.5005,                 loss: nan
Episode: 101/50100 (0.2016%),                 avg. length: 5.0,                last time consumption/overall running time: 0.1254s / 1.2220 s
agent0:                 episode reward: -0.0201,                 loss: nan
agent1:                 episode reward: 0.0201,                 loss: nan
Traceback (most recent call last):
  File "train_arbitrary_mdp.py", line 49, in <module>
    rollout(env, model, args, save_id)
  File "/home/zihan/research/MARS/mars/rollout.py", line 21, in rollout
    rollout_normal(env, model, save_id, args)
  File "/home/zihan/research/MARS/mars/rollout.py", line 161, in rollout_normal
    loss = model.update(
  File "/home/zihan/research/MARS/mars/rl/agents/multiagent.py", line 283, in update
    loss = agent.update()
  File "/home/zihan/research/MARS/mars/rl/agents/nfsp.py", line 81, in update
    state, action, _, _, _ = self.reservoir_buffer.sample(self.batch_size)
  File "/home/zihan/research/MARS/mars/rl/common/storage.py", line 157, in sample
    state, action, reward, next_state, done = zip(*random.sample(self.buffer, batch_size))
  File "/home/zihan/anaconda3/envs/x/lib/python3.7/random.py", line 321, in sample
    raise ValueError("Sample larger than population or is negative")
ValueError: Sample larger than population or is negative
